webpackHotUpdate("my-app",{

/***/ "./packages/peter-aiello-theme/src/components/InternalPage.js":
/*!********************************************************************!*\
  !*** ./packages/peter-aiello-theme/src/components/InternalPage.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var _assets_background_images_buildings_dark_jpg__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../assets/background-images/buildings-dark.jpg */ \"./packages/peter-aiello-theme/src/assets/background-images/buildings-dark.jpg\");\n/* harmony import */ var _assets_background_images_buildings_dark_jpg__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_assets_background_images_buildings_dark_jpg__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _Paths_LogoBackground__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./Paths/LogoBackground */ \"./packages/peter-aiello-theme/src/components/Paths/LogoBackground.js\");\n/* harmony import */ var _ArrowIcon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ArrowIcon */ \"./packages/peter-aiello-theme/src/components/ArrowIcon.js\");\nfunction _templateObject3(){var data=_taggedTemplateLiteral([\"\\n    from {\\n        transform: rotate(0deg);\\n    }\\n    to {\\n        transform: rotate(360deg);\\n    }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n    from {\\n        background-position: 50% 50%;\\n    }\\n    to {\\n        background-position: 100% 50%;\\n    }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n    0% {\\n        fill: var(--light-grey);\\n        transform: translate(0px, 0px);\\n    }\\n    10% {\\n        transform: translate(0px, 5px);\\n    }\\n    20% {\\n        transform: translate(0px, 0px);\\n    }\\n    30% {\\n        transform: translate(0px, 5px);\\n    }\\n    40% {\\n        transform: translate(0px, 0px);\\n    }\\n    50% {\\n        fill: var(--light-grey);\\n    }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}function _taggedTemplateLiteral(strings,raw){if(!raw){raw=strings.slice(0);}return Object.freeze(Object.defineProperties(strings,{raw:{value:Object.freeze(raw)}}));}function _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var Background=(_ref)=>{var{state,title,id,postContent,libraries}=_ref;var Html2React=libraries.html2react.Component;/* return null if no post content */if(!postContent)return null;/* get the background image url */var FeaturedMedia=state.source.attachment[id];var BackgroundUrl=!FeaturedMedia?_assets_background_images_buildings_dark_jpg__WEBPACK_IMPORTED_MODULE_4___default.a:FeaturedMedia.source_url;var BackgroundImage=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1e8zwfr0\",label:\"BackgroundImage\"})(\"position:relative;background-image:url(\",BackgroundUrl,\");background-size:auto;background-position:top center;background-attachment:scroll;background-repeat:no-repeat;width:100%;height:100%;min-height:100vh;overflow:hidden;@media (min-width:768px ){background-attachment:fixed;background-size:cover;background-position:50% 50%;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var BackgroundClip=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1e8zwfr1\",label:\"BackgroundClip\"})(\"-webkit-clip-path:url(#path-2);position:fixed;top:50%;clip-path:url(#path-2);background-image:url(\",BackgroundUrl,\");width:800px;height:800px;margin-top:-400px;background-size:cover;background-position:50% 50%;animation:\",myTransition,\";animation-duration:8s;animation-timing-function:linear;animation-delay:0s;animation-iteration-count:infinite;transform:scale(0.5);@media (min-width:768px){transform:scale(0.75);}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(BackgroundImage,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(IconWrapper,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(BackgroundClip,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_Paths_LogoBackground__WEBPACK_IMPORTED_MODULE_5__[\"default\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(ClipIcon,{src:BackgroundUrl,alt:\"branding-icon\"})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(TitleWrapper,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Title,null,title)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(ArrowWrapper,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_ArrowIcon__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{MyClass:MyArrow,MyFill:ArrowFill}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(ContentWrapper,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Content,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Html2React,{html:postContent})))));};var MyArrow=\"my-arrow\";var ArrowFill='white';var ArrowAnimation=Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"keyframes\"])(_templateObject());var ArrowWrapper=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1e8zwfr2\",label:\"ArrowWrapper\"})(\"position:fixed;height:75px;width:32px;left:50%;margin-left:calc(-32px / 2);bottom:5%;margin-top:calc(-75px / 2);.my-arrow{width:32px;animation:\",ArrowAnimation,\";animation-duration:4s;animation-timing-function:linear;animation-delay:0s;animation-iteration-count:infinite;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\"));var IconWrapper=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1e8zwfr3\",label:\"IconWrapper\"})( false?undefined:{name:\"i8lvob\",styles:\"position:relative;display:flex;justify-content:center;align-content:center;align-items:center;height:100vh;overflow:hidden;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var myTransition=Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"keyframes\"])(_templateObject2());var Rotate=Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"keyframes\"])(_templateObject3());var ClipIcon=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"img\",{target:\"e1e8zwfr4\",label:\"ClipIcon\"})(\"-webkit-clip-path:url(#path-1);clip-path:url(#path-1);width:796px;height:796px;animation:\",Rotate,\";animation-duration:8s;animation-timing-function:linear;animation-delay:0s;animation-iteration-count:infinite;\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9wZXRlcmFpZWxsby9yZXBvcy9wZXRlci1haWVsbG8tZnJvbnRpdHkvcGFja2FnZXMvcGV0ZXItYWllbGxvLXRoZW1lL3NyYy9jb21wb25lbnRzL0ludGVybmFsUGFnZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0SjJCIiwiZmlsZSI6Ii9Vc2Vycy9wZXRlcmFpZWxsby9yZXBvcy9wZXRlci1haWVsbG8tZnJvbnRpdHkvcGFja2FnZXMvcGV0ZXItYWllbGxvLXRoZW1lL3NyYy9jb21wb25lbnRzL0ludGVybmFsUGFnZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNvbm5lY3QsIGNzcywgc3R5bGVkLCBrZXlmcmFtZXMgfSBmcm9tIFwiZnJvbnRpdHlcIjtcbmltcG9ydCBQbGFjZWhvbGRlciBmcm9tIFwiLi4vYXNzZXRzL2JhY2tncm91bmQtaW1hZ2VzL2J1aWxkaW5ncy1kYXJrLmpwZ1wiO1xuaW1wb3J0IExvZ29CYWNrZ3JvdW5kIGZyb20gXCIuL1BhdGhzL0xvZ29CYWNrZ3JvdW5kXCI7XG5pbXBvcnQgQXJyb3dJY29uIGZyb20gXCIuL0Fycm93SWNvblwiO1xuXG5jb25zdCBCYWNrZ3JvdW5kID0gKHsgc3RhdGUsIHRpdGxlLCBpZCwgcG9zdENvbnRlbnQsIGxpYnJhcmllcyB9KSA9PiB7XG5cbiAgICBjb25zdCBIdG1sMlJlYWN0ID0gbGlicmFyaWVzLmh0bWwycmVhY3QuQ29tcG9uZW50O1xuXG4gICAgLyogcmV0dXJuIG51bGwgaWYgbm8gcG9zdCBjb250ZW50ICovXG4gICAgaWYoIXBvc3RDb250ZW50KSByZXR1cm4gbnVsbDtcblxuICAgIC8qIGdldCB0aGUgYmFja2dyb3VuZCBpbWFnZSB1cmwgKi9cbiAgICBjb25zdCBGZWF0dXJlZE1lZGlhID0gc3RhdGUuc291cmNlLmF0dGFjaG1lbnRbaWRdO1xuICAgIFxuICAgIGNvbnN0IEJhY2tncm91bmRVcmwgPSAoIUZlYXR1cmVkTWVkaWEgPyBQbGFjZWhvbGRlciA6IEZlYXR1cmVkTWVkaWEuc291cmNlX3VybCk7XG4gICAgXG4gICAgY29uc3QgQmFja2dyb3VuZEltYWdlID0gc3R5bGVkLmRpdmBcbiAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtCYWNrZ3JvdW5kVXJsfSk7XG4gICAgICAgIGJhY2tncm91bmQtc2l6ZTogYXV0bztcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogdG9wIGNlbnRlcjtcbiAgICAgICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBzY3JvbGw7XG4gICAgICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHggKSB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICAgICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gICAgICAgIH1cbiAgICBgXG5cbiAgICBjb25zdCBCYWNrZ3JvdW5kQ2xpcCA9IHN0eWxlZC5kaXZgXG4gICAgICAgIC13ZWJraXQtY2xpcC1wYXRoOiB1cmwoI3BhdGgtMik7XG4gICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgIGNsaXAtcGF0aDogdXJsKCNwYXRoLTIpO1xuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJHtCYWNrZ3JvdW5kVXJsfSk7XG4gICAgICAgIHdpZHRoOiA4MDBweDtcbiAgICAgICAgaGVpZ2h0OiA4MDBweDtcbiAgICAgICAgbWFyZ2luLXRvcDogLTQwMHB4O1xuICAgICAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNTAlO1xuICAgICAgICBhbmltYXRpb246ICR7bXlUcmFuc2l0aW9ufTtcbiAgICAgICAgYW5pbWF0aW9uLWR1cmF0aW9uOiA4cztcbiAgICAgICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyO1xuICAgICAgICBhbmltYXRpb24tZGVsYXk6IDBzO1xuICAgICAgICBhbmltYXRpb24taXRlcmF0aW9uLWNvdW50OiBpbmZpbml0ZTtcbiAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjUpO1xuICAgICAgICBAbWVkaWEgKG1pbi13aWR0aDogNzY4cHgpe1xuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZSgwLjc1KTtcbiAgICAgICAgfVxuICAgIGBcblxuICAgIHJldHVybiAoXG4gICAgICAgIDw+XG4gICAgICAgIDxCYWNrZ3JvdW5kSW1hZ2U+XG4gICAgICAgICAgICA8SWNvbldyYXBwZXI+XG4gICAgICAgICAgICAgICAgPEJhY2tncm91bmRDbGlwPlxuICAgICAgICAgICAgICAgICAgICA8TG9nb0JhY2tncm91bmQgLz5cbiAgICAgICAgICAgICAgICAgICAgPENsaXBJY29uIHNyYz17IEJhY2tncm91bmRVcmwgfSBhbHQ9XCJicmFuZGluZy1pY29uXCIvPlxuICAgICAgICAgICAgICAgIDwvQmFja2dyb3VuZENsaXA+XG4gICAgICAgICAgICAgICAgPFRpdGxlV3JhcHBlcj5cbiAgICAgICAgICAgICAgICAgICAgPFRpdGxlPnsgdGl0bGUgfTwvVGl0bGU+XG4gICAgICAgICAgICAgICAgPC9UaXRsZVdyYXBwZXI+XG4gICAgICAgICAgICAgICAgPEFycm93V3JhcHBlcj5cbiAgICAgICAgICAgICAgICAgICAgPEFycm93SWNvbiBNeUNsYXNzPXsgTXlBcnJvdyB9IE15RmlsbD17IEFycm93RmlsbCB9PjwvQXJyb3dJY29uPlxuICAgICAgICAgICAgICAgIDwvQXJyb3dXcmFwcGVyPlxuICAgICAgICAgICAgPC9JY29uV3JhcHBlcj5cbiAgICAgICAgICAgIHsvKiB0aGUgbWFya3VwIGZvciBwYWdlIGNvbnRlbnQgKi99XG4gICAgICAgICAgICA8Q29udGVudFdyYXBwZXI+XG4gICAgICAgICAgICAgICAgPENvbnRlbnQ+XG4gICAgICAgICAgICAgICAgICAgIDxIdG1sMlJlYWN0IGh0bWw9eyBwb3N0Q29udGVudCB9IC8+XG4gICAgICAgICAgICAgICAgPC9Db250ZW50PlxuICAgICAgICAgICAgPC9Db250ZW50V3JhcHBlcj5cbiAgICAgICAgPC9CYWNrZ3JvdW5kSW1hZ2U+XG4gICAgICAgIDwvPlxuICAgIClcbn1cblxuY29uc3QgTXlBcnJvdyA9IFwibXktYXJyb3dcIjtcblxuY29uc3QgQXJyb3dGaWxsID0gJ3doaXRlJztcblxuY29uc3QgQXJyb3dBbmltYXRpb24gPSBrZXlmcmFtZXNgXG4gICAgMCUge1xuICAgICAgICBmaWxsOiB2YXIoLS1saWdodC1ncmV5KTtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMHB4LCAwcHgpO1xuICAgIH1cbiAgICAxMCUge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwcHgsIDVweCk7XG4gICAgfVxuICAgIDIwJSB7XG4gICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDBweCwgMHB4KTtcbiAgICB9XG4gICAgMzAlIHtcbiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoMHB4LCA1cHgpO1xuICAgIH1cbiAgICA0MCUge1xuICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgwcHgsIDBweCk7XG4gICAgfVxuICAgIDUwJSB7XG4gICAgICAgIGZpbGw6IHZhcigtLWxpZ2h0LWdyZXkpO1xuICAgIH1cbmA7XG5cbmNvbnN0IEFycm93V3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGhlaWdodDogNzVweDtcbiAgICB3aWR0aDogMzJweDtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWFyZ2luLWxlZnQ6IGNhbGMoLTMycHggLyAyKTtcbiAgICBib3R0b206IDUlO1xuICAgIG1hcmdpbi10b3A6IGNhbGMoLTc1cHggLyAyKTsgICAgXG4gICAgLm15LWFycm93IHtcbiAgICAgICAgd2lkdGg6IDMycHg7XG4gICAgICAgIGFuaW1hdGlvbjogJHtBcnJvd0FuaW1hdGlvbn07XG4gICAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogNHM7XG4gICAgICAgIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGxpbmVhcjtcbiAgICAgICAgYW5pbWF0aW9uLWRlbGF5OiAwcztcbiAgICAgICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogaW5maW5pdGU7XG4gICAgfVxuYFxuXG5jb25zdCBJY29uV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24tY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgaGVpZ2h0OiAxMDB2aDtcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuYFxuXG5jb25zdCBteVRyYW5zaXRpb24gPSBrZXlmcmFtZXNgXG4gICAgZnJvbSB7XG4gICAgICAgIGJhY2tncm91bmQtcG9zaXRpb246IDUwJSA1MCU7XG4gICAgfVxuICAgIHRvIHtcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTAwJSA1MCU7XG4gICAgfVxuYDtcblxuY29uc3QgUm90YXRlID0ga2V5ZnJhbWVzYFxuICAgIGZyb20ge1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcbiAgICB9XG4gICAgdG8ge1xuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xuICAgIH1cbmA7XG5cbmNvbnN0IENsaXBJY29uID0gc3R5bGVkLmltZ2BcbiAgICAtd2Via2l0LWNsaXAtcGF0aDogdXJsKCNwYXRoLTEpO1xuICAgIGNsaXAtcGF0aDogdXJsKCNwYXRoLTEpO1xuICAgIHdpZHRoOiA3OTZweDtcbiAgICBoZWlnaHQ6IDc5NnB4O1xuICAgIGFuaW1hdGlvbjogJHtSb3RhdGV9O1xuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogOHM7XG4gICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogbGluZWFyO1xuICAgIGFuaW1hdGlvbi1kZWxheTogMHM7XG4gICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogaW5maW5pdGU7XG5gXG5cbmNvbnN0IFRpdGxlV3JhcHBlciA9IHN0eWxlZC5kaXZgXG4gICAgaGVpZ2h0OiAxMDBweDtcbiAgICB3aWR0aDogNTAwcHg7XG4gICAgcG9zaXRpb246IGZpeGVkO1xuICAgIGxlZnQ6IDUwJTtcbiAgICBtYXJnaW4tbGVmdDogLTI1MHB4O1xuICAgIHRvcDogNTAlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgbWFyZ2luLXRvcDogLTUwcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGp1c3RpZnktY290ZW50OiBjZW50ZXI7XG5gXG5cbmNvbnN0IFRpdGxlID0gc3R5bGVkLmgxYFxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgIGZvbnQtc2l6ZTogNHJlbTtcbiAgICBjb2xvcjogdmFyKC0tZGFyay1ncmV5KTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luOiAwO1xuYDtcblxuY29uc3QgQ29udGVudFdyYXBwZXIgPSBzdHlsZWQuZGl2YFxuICAgIGJhY2tncm91bmQ6IHZhcigtLWRhcmstZ3JleSk7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuYFxuXG5jb25zdCBDb250ZW50ID0gc3R5bGVkLmRpdmAgICAgXG4gICAgLyogZ3V0ZW5iZXJnIG92ZXJyaWRlcyAqL1xuICAgIC53cC1ibG9jay1ncm91cF9faW5uZXItY29udGFpbmVyIHtcbiAgICAgICAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvOyAgIFxuICAgIH1cblxuICAgIC5pcy1zdGlja3kge1xuICAgICAgICBwb3NpdGlvbjogc3RpY2t5O1xuICAgICAgICB0b3A6IDA7XG4gICAgfVxuXG4gICAgLmZ1bGwtaGVpZ2h0IHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xuICAgIH1cblxuICAgIC5zZWN0aW9uLXBhZGRpbmcge1xuICAgICAgICBwYWRkaW5nOiAxMHJlbSAzMHB4O1xuICAgIH1cblxuICAgIC5iYWNrZ3JvdW5kLWRhcmsge1xuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1kYXJrLWdyZXkpO1xuICAgICAgICBjb2xvcjogdmFyKC0tbGlnaHQtZ3JleSk7XG4gICAgfVxuXG4gICAgLmJhY2tncm91bmQtYmx1ZSB7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWxpZ2h0LWJsdWUpO1xuICAgICAgICBjb2xvcjogdmFyKC0tZGFyay1ncmV5KTtcbiAgICB9XG5cbiAgICAuYmFja2dyb3VuZC1ibHVlIGgzLCBcbiAgICAuYmFja2dyb3VuZC1ibHVlIHAge1xuICAgICAgICBjb2xvcjogdmFyKC0tZGFyay1ncmV5KTtcbiAgICB9XG5cbiAgICAuc2VjdGlvbi0xIGltZy5wb3J0cmFpdCB7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICB9XG5cbiAgICAuc2VjdGlvbi0zIHAuc2tpbGwtbmFtZSB7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgICAgIEBtZWRpYSAobWluLXdpZHRoOiA3NjhweCkge1xuICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XG4gICAgICAgIH0gXG4gICAgfVxuXG4gICAgLmJ1dHRvbi1wcmltYXJ5IGEge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgY29sb3I6IHZhcigtLW9yYW5nZS1oaWdobGlnaHQpO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1vcmFuZ2UtaGlnaGxpZ2h0KTtcbiAgICAgICAgcGFkZGluZzogMXJlbSAzcmVtO1xuICAgICAgICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICBmb250LWZhbWlseTogJ09wZW4gU2Fucycsc2Fucy1zZXJpZjtcbiAgICAgICAgZm9udC13ZWlnaHQ6IEJvbGQ7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAgIH1cblxuICAgIC5idXR0b24tZGFyayBhIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIHdpZHRoOiBhdXRvO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1kYXJrLWdyZXkpO1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1kYXJrLWdyZXkpO1xuICAgICAgICBwYWRkaW5nOiAxcmVtIDNyZW07XG4gICAgICAgIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJyxzYW5zLXNlcmlmO1xuICAgICAgICBmb250LXdlaWdodDogQm9sZDtcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gICAgfVxuXG4gICAgLyogY29udGFjdCBmb3JtIDcgKi9cbiAgICBpbnB1dFt0eXBlPVwidGV4dFwiXSxcbiAgICBpbnB1dFt0eXBlPVwiZW1haWxcIl0ge1xuICAgICAgICBmb250LXNpemU6IDEuMjVyZW07XG4gICAgICAgIHBhZGRpbmc6IDAuNXJlbTtcbiAgICAgICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICAgICAgbWFyZ2luLXRvcDogMXJlbTtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgfVxuXG4gICAgaW5wdXRbdHlwZT1cInN1Ym1pdFwiXSB7XG4gICAgICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1vcmFuZ2UtaGlnaGxpZ2h0KTtcbiAgICAgICAgZm9udC1zaXplOiAxLjI1cmVtO1xuICAgICAgICBwYWRkaW5nOiAxcmVtIDJyZW07XG4gICAgICAgIGNvbG9yOiB2YXIoLS1vcmFuZ2UtaGlnaGxpZ2h0KTtcbiAgICB9XG5cbiAgICB0ZXh0YXJlYSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBtYXJnaW4tdG9wOiAxcmVtO1xuICAgICAgICBwYWRkaW5nOiAwLjVyZW07XG4gICAgICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gICAgICAgIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJyxzYW5zLXNlcmlmO1xuICAgICAgICBmb250LXNpemU6IDEuMjVyZW07XG4gICAgfVxuXG4gICAgLkVycm9yTWVzc2FnZSB7XG4gICAgICAgIGNvbG9yOiB2YXIoLS1saWdodC1ncmV5KTtcbiAgICB9XG5gXG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoQmFja2dyb3VuZCk7XG4iXX0= */\"));var TitleWrapper=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1e8zwfr5\",label:\"TitleWrapper\"})( false?undefined:{name:\"1je9hjn\",styles:\"height:100px;width:500px;position:fixed;left:50%;margin-left:-250px;top:50%;overflow:hidden;margin-top:-50px;display:flex;flex-direction:column;justify-cotent:center;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Title=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"h1\",{target:\"e1e8zwfr6\",label:\"Title\"})( false?undefined:{name:\"z9b71p\",styles:\"text-transform:uppercase;position:relative;font-size:4rem;color:var(--dark-grey);text-align:center;margin:0;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var ContentWrapper=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1e8zwfr7\",label:\"ContentWrapper\"})( false?undefined:{name:\"cqa54p\",styles:\"background:var(--dark-grey);position:relative;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var Content=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1e8zwfr8\",label:\"Content\"})( false?undefined:{name:\"1na6ir3\",styles:\".wp-block-group__inner-container{max-width:1200px;margin:0 auto;}.is-sticky{position:sticky;top:0;}.full-height{width:100%;min-height:100vh;}.section-padding{padding:10rem 30px;}.background-dark{background-color:var(--dark-grey);color:var(--light-grey);}.background-blue{background-color:var(--light-blue);color:var(--dark-grey);}.background-blue h3,.background-blue p{color:var(--dark-grey);}.section-1 img.portrait{border-radius:50%;}.section-3 p.skill-name{text-align:left;@media (min-width:768px){text-align:right;}}.button-primary a{display:block;width:auto;text-align:center;color:var(--orange-highlight);border:1px solid var(--orange-highlight);padding:1rem 3rem;-webkit-text-decoration:none;text-decoration:none;font-family:'Open Sans',sans-serif;font-weight:Bold;border-radius:0;background-color:transparent;}.button-dark a{display:block;width:auto;text-align:center;color:var(--dark-grey);border:1px solid var(--dark-grey);padding:1rem 3rem;-webkit-text-decoration:none;text-decoration:none;font-family:'Open Sans',sans-serif;font-weight:Bold;border-radius:0;background-color:transparent;}input[type=\\\"text\\\"],input[type=\\\"email\\\"]{font-size:1.25rem;padding:0.5rem;box-sizing:border-box;margin-top:1rem;width:100%;}input[type=\\\"submit\\\"]{background:transparent;border:1px solid var(--orange-highlight);font-size:1.25rem;padding:1rem 2rem;color:var(--orange-highlight);}textarea{width:100%;margin-top:1rem;padding:0.5rem;box-sizing:border-box;font-family:'Open Sans',sans-serif;font-size:1.25rem;}.ErrorMessage{color:var(--light-grey);}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(Background));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/peter-aiello-theme/src/components/InternalPage.js\n");

/***/ })

})